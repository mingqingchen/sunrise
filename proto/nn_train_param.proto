syntax = "proto2";

package tutorial;

// parameters used for NN training
// Next field id: 27
message TrainingParams {
  enum Type {
    CLASSIFY_FUTURE_HIGHEST_PRICE = 0;
    REGRESS_FUTURE_HIGHEST_PRICE = 1;
    CLASSIFY_BUY_SELL_TIME = 2;
  }
  // number of timepoints used
  required int32 num_time_points = 1;

  // upper limit (inclusive) of number of points used
  required int32 upper_time_point_limit = 2;

  // market open time
  required int32 open_time = 3 [default = 630];

  // market close time
  required int32 close_time = 4 [default = 1255];

  // total minutes for market open time
  required int32 total_minutes_normalizer = 5 [default = 390];

  // Sample step for training
  required int32 sample_step_training = 6;

  // sample step for testing
  required int32 sample_step_testing = 7;

  // parameters related to DL
  required float learning_rate = 8;
  required int32 num_epochs = 9;
  required int32 batch_size = 10;

  // Number of hidden nodes for each layer
  repeated int32 architecture = 11;
  
  // Use CNN or fully connected network.
  required bool use_cnn = 24;

  required Type type = 12;

  required bool load_previous_model = 13;

  required string previous_model = 14;

  required string model_folder = 15;
  required string output_model_name_prefix = 16;
  required string log_file = 17;

  // Classify threshold for type CLASSIFY_FUTURE_HIGHEST_PRICE
  required float classify_threshold = 18;

  // window size to determine if it is a local maxima for CLASSIFY_BUY_SELL_TIME
  required int32 local_maximal_window_size = 19;
  // neighbor points may be not that high, but may also be considered as local maximal if its price is higher than this margin
  required float local_maximal_margin = 20;

  // The following two parameters are related to whether to use relative price position to filter the buy time.
  // Only apply to CLASSIFY_FUTURE_HIGHEST_PRICE
  required bool use_relative_price_percentage_to_buy = 21 [default = true];
  required float relative_price_percentage = 22 [default = 0.5];

  required bool use_pre_market_data = 23 [default = true];

  // the following two controls the eligibility of current time point
  required float dense_ratio = 25 [default = 0.8];
  required float average_cash_flow_per_min = 26 [default = 20000];
}

message TradeParamAI {
  required TrainingParams buy_param = 1;
  required TrainingParams sell_param = 2;
  required int32 num_eligible_list_requirement = 3 [default = 100];
  required float increase_check_threshold = 4 [default = 0.01];
  required float decrease_check_threshold = 5 [default = -0.005];
  required float buy_stock_prob_threshold = 6 [default = 0.65];
  required bool sell_within_day = 7 [default = false];
}
